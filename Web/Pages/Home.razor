@page "/"
@using SubtitleDubber.Utils
@using System.Speech.Synthesis

<PageTitle>Home</PageTitle>
        <div class="col-md-8 mx-auto">
                <div class="card" style="margin: auto; max-width: 500px; min-height: 16rem;">
                    <div class="card-header d-flex">
<h1>Welcome to subtitle dubber!</h1>
        </div>
                    <div class="card-body">
        <p>This tool allows you to easily add autogenerated audio track from film subtitles using SAPI5 TTS voices.</p>
<p>First, add video file and configure speech synthesizer.</p>
<h2>Video file</h2>
<InputFile OnChange="@LoadFiles"/>
<hr/>
<h2>TTS Settings</h2>
<label for="text">Test speech:</label>
            <textarea id="text" @bind="@_text" style="margin-bottom: 1rem;" rows="2" cols="50"/>
            <button class="btn btn-primary align-bottom" type="button" @onclick="SpeakText">Speak</button>
            <hr />

            <label for="synthesizer">Select synthesizer:</label>
            <select id="synthesizer" @bind="_selectedVoiceName" @bind:after="SetSynthesizer">
                @if (_voices != null)
                {
                    @foreach (var voice in _voices)
                    {
                        <option value="@voice.Name">@voice.Name - @voice.Culture</option>
                    }
                }
                        </select>
            <input type="range" min="0" max="100" class="slider" @bind = "_speed" @bind:after="SetSpeed" step="5" title="Speed"/>
            <input type="range" min="0" max="100" class="slider" @bind="_volume" @bind:after="SetVolume" title="Volume"/>
        </div>
    </div>
</div>
@code {
    List<VoiceInfo> _voices = new List<VoiceInfo>();
    SpeechUtils _speechUtils = new();
    string _selectedVoiceName;
    string _text = string.Empty;
    int _speed = 50, _volume=100;

    protected override async Task OnInitializedAsync()
    {
        _voices = _speechUtils.GetInstalledVoices();
        _selectedVoiceName = _speechUtils.GetVoice().Name;
    }

    private void LoadFiles(InputFileChangeEventArgs e)
    {
    }

    void SetSynthesizer()
    {
        _speechUtils.SetVoice(_selectedVoiceName);
    }

    void ChangeSpeed()
    {
        _speechUtils.SetRate(_speed);
    }

    private void SpeakText()
    {
        _speechUtils.Speak(_text);
    }

    void SetSpeed()
    {
        _speechUtils.SetRate(-10+_speed/5);
    }

    void SetVolume()
    {
        _speechUtils.SetVolume(_volume);
    }

}