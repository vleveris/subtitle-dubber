@page "/"
@using SubtitleDubber.Utils
@using SubtitleDubber.Models
@using Web.Data

@inject NavigationManager Navigation
<PageTitle>Subtitle Dubber</PageTitle>
        <div class="col-md-8 mx-auto">
                <div class="card" style="margin: auto; max-width: 500px; min-height: 16rem;">
                    <div class="card-header d-flex">
<h1>Welcome to subtitle dubber!</h1>
        </div>
                    <div class="card-body">
        <p>This tool allows you to easily add autogenerated audio track from film subtitles using SAPI5 TTS voices.</p>
<p>First, add video file and configure speech synthesizer.</p>
<h2>Video file</h2>
            <button class="btn btn-primary align-bottom" type="button" @onclick="SelectFile">Choose file</button>
<label>Selected file: @State.InputVideoFileName</label>
<hr/>
<h2>TTS Settings</h2>
<label for="text">Test speech:</label>
            <textarea id="text" @bind="@_text" style="margin-bottom: 1rem;" rows="2" cols="50"/>
            <button class="btn btn-primary align-bottom" type="button" @onclick="SpeakText">Speak</button>
            <hr />

            <label for="synthesizer">Select synthesizer:</label>
            <select id="synthesizer" @bind="_selectedVoiceName" @bind:after="SetSynthesizer">
                @if (_voices != null)
                {
                    @foreach (var voice in _voices)
                    {
                        <option value="@voice.Name">@voice.Name - @voice.Language</option>
                    }
                }
                        </select>
<h3>Selected voice information</h3>
<ul>
                <li>ID: @_selectedVoice.Id</li>
                <li>Name: @_selectedVoice.Name</li>
    <li>Language: @_selectedVoice.Language</li>
<li>Gender: @_selectedVoice.Gender</li>
<li>Age: @_selectedVoice.Age</li>
<li>Description: @_selectedVoice.Description</li>
                @foreach (var key in _selectedVoice.AdditionalInfo.Keys)
                {
if (key != "Name" && key != "Gender" && key != "Age" && key != "Language")
                    {
                    <li>@String.Format("{0}: {1}", key, _selectedVoice.AdditionalInfo[key])</li>
                    }
                }
            </ul>
<hr/>
            <input type="range" min="0" max="100" class="slider" @bind = "_speed" @bind:after="SetSpeed" step="5" title="Speed"/>
            <input type="range" min="0" max="100" class="slider" @bind="_volume" @bind:after="SetVolume" title="Volume"/>
<hr/>
            <button class="btn btn-primary align-bottom" type="button" disabled="@string.IsNullOrEmpty(State.InputVideoFileName)" @onclick="NavigateToAudioPage">Proceed</button>
        </div>
    </div>
</div>
@code {
    List<VoiceInfo> _voices = new List<VoiceInfo>();
    string _selectedVoiceName;
    string _text = string.Empty;
    int _speed = 50, _volume=100;
    VoiceInfo _selectedVoice;
    protected override async Task OnInitializedAsync()
    {
        _voices = SpeechUtils.GetInstalledVoices();
        _selectedVoiceName = SpeechUtils.GetVoiceName();
        SetSynthesizer();
        _selectedVoice = _voices.Find(v => v.Name == _selectedVoiceName);
    }

    private void SelectFile()
    {
        State.AppState = 1;
    }

    void SetSynthesizer()
    {
        SpeechUtils.SetVoice(_selectedVoiceName);
    }

    private void SpeakText()
    {
        SpeechUtils.Speak(_text);
    }

    void SetSpeed()
    {
        SpeechUtils.SetRate(-10+_speed/5);
    }

    void SetVolume()
    {
        SpeechUtils.SetVolume(_volume);
    }

    private void NavigateToAudioPage()
    {
        Navigation.NavigateTo("audio");
    }
}